buildscript {
    ext {
        verRedisson = "3.24.3"
        verQuerydsl = "5.0.0"
    }
}

plugins {
    id "org.springframework.boot" version "3.1.3"
    id "io.spring.dependency-management" version "1.1.3"
    id "java-library"
    id "java"
}

group = "app"
version = "0.0.1"
sourceCompatibility = "17"

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.session:spring-session-data-redis")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    implementation("org.redisson:redisson-spring-boot-starter:${verRedisson}")
    implementation("com.querydsl:querydsl-core")
    implementation("com.querydsl:querydsl-collections")
    implementation("com.querydsl:querydsl-jpa:${verQuerydsl}:jakarta")
    annotationProcessor("com.querydsl:querydsl-apt:${verQuerydsl}:jakarta")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")

    implementation("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
}

compileJava {
    options.compilerArgs += ["--enable-preview"]
}

compileTestJava {
    options.compilerArgs += ["--enable-preview"]
}

tasks.named("test") {
    useJUnitPlatform()
    jvmArgs(["--enable-preview"])
}